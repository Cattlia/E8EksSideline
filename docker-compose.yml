services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.Nginx
    ports:
      - "80:80"
    volumes:
      - ./E8EksNginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - eksamensnett

    

  api:
    build:
      context: .
      dockerfile: Dockerfile.Api
    restart: on-failure:10
    environment:
      - ConnectionStrings__DefaultConnection=${DefaultConnection}
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/products/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "8080:8080"
    networks:
      - eksamensnett

  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./E8EksMysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] # localhost = inside the container
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - eksamensnett

volumes:
  db_data:
    driver: local

networks:
  eksamensnett:
    driver: bridge